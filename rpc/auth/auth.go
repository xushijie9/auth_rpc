// Code generated by goctl. DO NOT EDIT.
// Source: auth_rpc.proto

package auth

import (
	"context"

	"auth_rpc/rpc/types/auth_rpc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AuthReply   = auth_rpc.AuthReply
	AuthRequest = auth_rpc.AuthRequest

	Auth interface {
		LoginAuth(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*AuthReply, error)
	}

	defaultAuth struct {
		cli zrpc.Client
	}
)

func NewAuth(cli zrpc.Client) Auth {
	return &defaultAuth{
		cli: cli,
	}
}

func (m *defaultAuth) LoginAuth(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*AuthReply, error) {
	client := auth_rpc.NewAuthClient(m.cli.Conn())
	return client.LoginAuth(ctx, in, opts...)
}
